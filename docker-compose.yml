version: '3'
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: max
      POSTGRES_PASSWORD: jbfgslgsdlfkngd
      POSTGRES_DB: history
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - 3200:5432
    networks:
      - mynetwork
    command: echo "start DB"
  
  scanner:
    restart: always
    build:
      context: .
      dockerfile: scannerHistory/Dockerfile
    environment:
      POSTGRES_USER: max
      POSTGRES_PASSWORD: jbfgslgsdlfkngd
      POSTGRES_DB: history
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      - db
    networks:
      - mynetwork
    
    command: knex migrate:latest --esm
    
  
  # similarer:
  #   restart: always
  #   build:
  #     context: .
  #     dockerfile: similarGames/Nodejs/Dockerfile
  #   environment:
  #     POSTGRES_USER: max
  #     POSTGRES_PASSWORD: jbfgslgsdlfkngd
  #     POSTGRES_DB: history
  #     POSTGRES_HOST: db
  #     POSTGRES_PORT: 5432
  #     PYTHON_API_URL: http://python:5000/api/names
  #   depends_on:
  #     - python
  #     - db
  #   networks:
  #     - mynetwork
  
  # python:
  #   restart: always
  #   build:
  #     context: .
  #     dockerfile: similarGames/pythonApi/Dockerfile
  #   ports:
  #     - 5000:5000  # Проброс порта 8000 на локальной машине на порт 8000 в контейнере
  #   networks:
  #     - mynetwork

networks:
  mynetwork: